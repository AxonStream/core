version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    container_name: axonpuls_postgres
    environment:
      POSTGRES_USER: axonpuls
      POSTGRES_PASSWORD: axonpulspassword
      POSTGRES_DB: axonpuls
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U axonpuls" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: axonpuls_redis
    command: [ "redis-server", "--appendonly", "yes" ]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: axonpuls_api
    env_file:
      - ./apps/api/.env
    environment:
      DATABASE_URL: postgresql://axonpuls:axonpulspassword@postgres:5432/axonpuls?schema=public
      REDIS_URL: redis://redis:6379
      REDIS_HOST: redis
      REDIS_PORT: 6379
      NODE_ENV: development
    ports:
      - "3001:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: sh -c "npm run start:prod"

  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: axonpuls_web
    environment:
      NEXT_PUBLIC_API_BASE_URL: http://localhost:3001/api/v1
      NODE_ENV: development
    ports:
      - "3000:3000"
    depends_on:
      - api
    command: sh -c "npm run start"

volumes:
  postgres_data:
  redis_data:
