#!/usr/bin/env node

/**
 * 🧪 COMPREHENSIVE LOCAL PACKAGE TESTS
 * Generated by build-test-all.js
 */

console.log('🚀 Testing All Local Packages\n');

let allPassed = true;
const results = [];


// Test @axonstream/core
console.log('🧪 Testing @axonstream/core...');
try {

    const { AxonPulsClient } = await import('@axonstream/core');
    if (typeof AxonPulsClient === 'undefined') {
        throw new Error('AxonPulsClient is undefined');
    }
    console.log('  ✅ AxonPulsClient: ' + typeof AxonPulsClient);
    const { createAxonStream } = await import('@axonstream/core');
    if (typeof createAxonStream === 'undefined') {
        throw new Error('createAxonStream is undefined');
    }
    console.log('  ✅ createAxonStream: ' + typeof createAxonStream);

    results.push({ package: '@axonstream/core', status: 'passed' });
    console.log('✅ @axonstream/core - ALL EXPORTS OK\n');
} catch (error) {
    console.log('❌ @axonstream/core - FAILED:', error.message);
    results.push({ package: '@axonstream/core', status: 'failed', error: error.message });
    allPassed = false;
}

// Test @axonstream/react
console.log('🧪 Testing @axonstream/react...');
try {

    const { useAxonpuls } = await import('@axonstream/react');
    if (typeof useAxonpuls === 'undefined') {
        throw new Error('useAxonpuls is undefined');
    }
    console.log('  ✅ useAxonpuls: ' + typeof useAxonpuls);
    const { useAxonpulsChannel } = await import('@axonstream/react');
    if (typeof useAxonpulsChannel === 'undefined') {
        throw new Error('useAxonpulsChannel is undefined');
    }
    console.log('  ✅ useAxonpulsChannel: ' + typeof useAxonpulsChannel);

    results.push({ package: '@axonstream/react', status: 'passed' });
    console.log('✅ @axonstream/react - ALL EXPORTS OK\n');
} catch (error) {
    console.log('❌ @axonstream/react - FAILED:', error.message);
    results.push({ package: '@axonstream/react', status: 'failed', error: error.message });
    allPassed = false;
}

// Test @axonstream/cli
console.log('🧪 Testing @axonstream/cli...');
try {

    // Package doesn't export classes, just check if it can be imported
    const packageModule = await import('@axonstream/cli');
    console.log('  ✅ Package imported successfully');

    results.push({ package: '@axonstream/cli', status: 'passed' });
    console.log('✅ @axonstream/cli - ALL EXPORTS OK\n');
} catch (error) {
    console.log('❌ @axonstream/cli - FAILED:', error.message);
    results.push({ package: '@axonstream/cli', status: 'failed', error: error.message });
    allPassed = false;
}

// Skip @axonstream/ui - it doesn't exist as a public package
console.log('🧪 Skipping @axonstream/ui (not a public package)...');
console.log('✅ @axonstream/ui - SKIPPED (not for production release)\n');


// Summary
console.log('='.repeat(50));
console.log('📊 PACKAGE TEST RESULTS:');
console.log('='.repeat(50));

results.forEach(result => {
    const status = result.status === 'passed' ? '✅ PASSED' : '❌ FAILED';
    console.log(`  ${result.package}: ${status}`);
    if (result.error) {
        console.log(`    Error: ${result.error}`);
    }
});

const passedCount = results.filter(r => r.status === 'passed').length;
const totalCount = results.length;
const successRate = ((passedCount / totalCount) * 100).toFixed(1);

console.log('\n' + '='.repeat(50));
if (allPassed) {
    console.log(`🎉 ALL PACKAGES WORKING! (${successRate}%)`);
    console.log('✅ Ready for publishing');
} else {
    console.log(`❌ ${totalCount - passedCount} packages failed (${successRate}% success rate)`);
    console.log('🔧 Fix issues before publishing');
}
console.log('='.repeat(50));

process.exit(allPassed ? 0 : 1);
